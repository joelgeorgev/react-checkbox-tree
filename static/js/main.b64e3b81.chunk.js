(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,n,t){},17:function(e,n,t){"use strict";t.r(n);var c=t(0),r=t.n(c),a=t(4),o=t.n(a),i=(t(15),function e(n){var t=n.id,c=n.nodes,a=n.onToggle,o=c[t],i=o.key,d=o.childIds,l=o.checked;return r.a.createElement(r.a.Fragment,{key:t},i&&r.a.createElement("li",null,r.a.createElement("input",{type:"checkbox",checked:l,className:"pointer",onChange:function(){return a(t)}}),r.a.createElement("label",{className:"ml2"},i)),d.length?r.a.createElement("ul",{className:"list"},d.map(function(n){return r.a.createElement(e,{key:n,id:n,nodes:c,onToggle:a})})):null)}),d=t(7),l=t(1),s=t(2),u=t(8);function h(e){var n=function(e,n){if("object"!==typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var c=t.call(e,n||"default");if("object"!==typeof c)return c;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===typeof n?n:String(n)}var f=t(5),k=function(){var e=Object(c.useState)(function(e){var n=e.list,t=void 0===n?[]:n,c=e.recursionKey,r=void 0===c?"children":c,a={},o=-1;return function e(n){var t=n.node,c=n.parentId,i=o+=1,d=(t[r],Object(u.a)(t,[r].map(h)));a[i]=Object(s.a)({},d,{parentId:c,childIds:[]}),c>=0&&a[c].childIds.push(i),t[r]&&t[r].length&&t[r].forEach(function(n){e({node:n,parentId:i})})}({node:Object(l.a)({},r,t)}),a}({list:f,recursionKey:"childKeys"})),n=Object(d.a)(e,2),t=n[0],a=n[1];return r.a.createElement(i,{id:0,nodes:t,onToggle:function(e){a(function(n){return function(e){var n=e.id,t=e.prevState,c=function(e){var n=e.node,t=e.checked;n.checked=t},r=function(e){var n={};return Object.keys(e).forEach(function(t){n[t]=Object(s.a)({},e[t])}),n}(t);return function e(n){var t=n.id,r=n.nodes,a=n.checked,o=r[t],i=o.childIds;c({node:o,checked:a}),i.length&&i.forEach(function(n){e({id:n,nodes:r,checked:a})})}({id:n,nodes:r,checked:!r[n].checked}),function e(n){var t=n.id,r=n.nodes,a=r[t].parentId,o=r[a],i=function e(n){var t=n.id,c=n.nodes,r=c[t],a=r.childIds;return a.length?a.reduce(function(n,t){return n&&e({id:t,nodes:c})},!0):r.checked}({id:a,nodes:r});c({node:o,checked:i}),o.parentId>=0&&e({id:a,nodes:r})}({id:n,nodes:r}),r}({id:e,prevState:n})})}})},m=function(){return r.a.createElement("div",null,r.a.createElement("h3",null,"React Checkbox Tree"),r.a.createElement("p",null,"A react app showcasing a simple checkbox tree component. This project was created using ",r.a.createElement("a",{href:"https://github.com/facebookincubator/create-react-app"},"create-react-app"),"."))},p=t(6),v=t.n(p);t(16);o.a.render(r.a.createElement(function(){return r.a.createElement("div",{className:"flex flex-column w-80 mw8 vh-100 center pv4"},r.a.createElement("div",{className:"flex flex-auto flex-column"},r.a.createElement(m,null),r.a.createElement(k,null)),r.a.createElement("div",{className:"self-center"},r.a.createElement("a",{href:"https://github.com/joelgeorgev/react-checkbox-tree"},r.a.createElement("img",{src:v.a,alt:"GitHub"}))))},null),document.getElementById("root")),"serviceWorker"in navigator&&window.addEventListener("load",function(){var e="".concat("/react-checkbox-tree","/service-worker.js");navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}}).catch(function(e){console.error("Error during service worker registration:",e)})})},5:function(e){e.exports=[{key:"Name",checked:!1},{key:"Age",checked:!1},{key:"Contact",checked:!1,childKeys:[{key:"Telephone",checked:!1,childKeys:[{key:"Home",checked:!1},{key:"Work",checked:!1}]},{key:"Mobile",checked:!1}]},{key:"Address",checked:!1,childKeys:[{key:"House",checked:!1},{key:"Road",checked:!1},{key:"Zip Code",checked:!1}]}]},6:function(e,n,t){e.exports=t.p+"static/media/github.dc6635a4.svg"},9:function(e,n,t){e.exports=t(17)}},[[9,1,2]]]);
//# sourceMappingURL=main.b64e3b81.chunk.js.map